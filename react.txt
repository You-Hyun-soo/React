mysql - node 연결해서 mysql에 저장되어 있는 데이터베이스 뿌려주기

npm install create-react-app -g
create-react-app
babel
React.js

Component(컴포넌트) - 구성요소, 요소

요소를 이용해서 재사용 가능한 화면을 작성하는 웹 개발 방식

최근 많은 웹 프로젝트들이 화면 레이아웃은 단일 페이지로 작성한 후 그 안의 컨텐츠(데이터)만 교체하면서 사용자에게 화면을 보여주는 경우가 많음

JSX : 자바스크립트를 기반으로 한 확장판 문법. 자바스크립트에서 제공하는 기능을 사용할 수 있는데, 다만 JSX만의 규칙에 맞게 사용해야만 한다.

1. 요소는 반드시 하나로 감싸진 상태여야만 한다.

가령 아무리 많은 html태그를 작성했다고 할지라도 최종적으로는 하나의 부모태그 안에 감싸져 있어야 한다.

<div>
	... 많은 자식 태그들 ...
</div>
---------------------------------------------
<div>
	... 태그들 ...
</div>
<div>
	... 태그들 ...
</div>

=> 오류
----------------------------------------------

2. 태그는 반드시 닫는다.

일반적으로 HTML5 표준에 맞추어서 태그를 작성할 때에는
<br> <input> 등과 같이 닫는 태그가 없거나 닫힘 표시가 없이도
사용가능한 태그들이 있었다.
하지만 JSX에서는 html 태그 사용시 반드시 닫아주어야 한다.

3. JSX 내부에서 사용하는 조건문

삼항연산자 : 조건 ? 참 : 거짓 
(name === "홍길동") ? console.log("true!") : console.log("false!"); 

and연산자 : 조건 && 참
(name === "홍길동")&&setName();

4. JSX 내부에서 스크립트 코드를 사용 시 {}를 이용해서 값을 출력한다.

Node.js를 이용해서 백엔드를 작성했을 때 이용한 ejs 템플릿의 <%= %> <% %>

<%=name%> : ejs
{name} : JSX

5. JSX 내부에서 function을 작성할 때 규칙
(function(){

})()

function코드를 괄호로 감싸준 다음에 ()를 붙여서 function코드임을 명시한다.


props & state : google 이미지 : 일방향적 상속

react hooks

props : 부모 컴포넌트 -> 자식 컴포넌트에게 물려주는 것. 단, 자식 컴포넌트는 값을 물려받은 후 직접 수정할 수 없다.

state : 컴포넌트 내부에서 생성 및 선언되고, 그곳에서 값을 수정할 수 있다.

App.js -> User.js


다음주 : 

life cycle
class 방식


