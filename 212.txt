생명주기 (LifeCycle)

-- 초기 생성과 연관된 메서드(함수)
* constructor : 컴포넌트의 생성자 함수. 컴포넌트가 새로 생성될 때마다 이 함수가 호출된다.

* componentDidMount : 컴포넌트가 화면에 출력될 때 호출된다. 외부 라이브러리 연동 또는 DOM 속성을 변경할 때 주로 사용된다.
 
-- 업데이트 발생 시

UNSAFE_componentWillReceiveProps() : 컴포넌트가 새로운 props를 물려받았을 때 호출된다. this.props로 접근을 하면 이전의 props 값을 조회하게 되고 nextProps로 새로운 props에 접근할 수 있다.

static getDerivedStateFromProps() : 컴포넌트가 props를 받아서 state로 동기화를 할 때 사용된다. 물려받은 props들 중에서 특정 props 값이 변경되었을 때 그 상황에 맞는 새로운 state 설정을 반환한다. 
=> "새로운 props 값이 기존의 props 값과 다른 경우에 무엇무엇을 return하라 "

shouldComponentUpdate : 부모 컴포넌트가 랜더링이 되면 자식 컴포넌트도 모두 랜더링이 되는 리액트의 특성에서 최적화를 위해 사용되는 함수. 기본적으로는 true를 return하고 특정 조건일 때는 false를 return하라는 로직을 심어주면 해당 조건에서는 render하지 않는다. => 최적화를 위해서 쓰는 생명주기 함수

componentWillUpdate : 위의 함수가 true로 return되었을 때만 호출된다.

componentDidUpdate : render()가 작동된 후에 호출하는 함수. 파라미터를 통해 이전 props와 state 값을 조회할 수 있다.
 
-- 컴포넌트의 제거 

componentWillUnmount : 각종 이벤트나 외부 라이브러리를 제거할 때 사용한다.

react_input

input 태그 입력 값 -> onChange가 해당 태그의 이벤트 변화 감지 후 작동 -> setState 작동 -> 현재 state 값을 새로운 값 (입력받은 값) 으로 교체

app.js 부모 / form.js 자식

